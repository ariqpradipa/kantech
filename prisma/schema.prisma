// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// Define enums
enum Role {
  customer
  admin
}

enum Status {
  confirmation
  process
  pickup
  complete
}

// Define User model
model User {
  id            String   @id @default(uuid()) @map("_id") // Assuming auto-generated IDs
  email         String   @unique
  password      String?
  name          String?
  photo_url     String?
  role          Role     @default(customer)
  provider      String   @default("kantech.vercel.app")
  npm           String?  @unique
  faculty       String?
  study_program String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  Order Order[]
}

// Define Vendor model
model Vendor {
  id          String   @id @default(uuid()) @map("_id") // Assuming auto-generated IDs
  email       String   @unique
  password    String
  name        String?
  description String?
  rating      Decimal  @default(0)
  photo_url   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Menu  Menu[]
  Order Order[]
}

// Define Menu model
model Menu {
  id          String   @id @default(uuid()) @map("_id") // Assuming auto-generated IDs
  vendor_id   String
  name        String
  description String?
  price       Decimal
  rating      Decimal? @default(0)
  photo_url   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  vendor Vendor  @relation(fields: [vendor_id], references: [id])
  Order  Order[]
}

// Define Order model
model Order {
  id          String   @id @default(uuid()) @map("_id") // Assuming auto-generated IDs
  customer_id String
  vendor_id   String
  menu_id     String
  note        String?
  status      Status   @default(confirmation)
  rating      Decimal? @default(0)
  review      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Define foreign key relationships
  user   User   @relation(fields: [customer_id], references: [id])
  vendor Vendor @relation(fields: [vendor_id], references: [id])
  menu   Menu   @relation(fields: [menu_id], references: [id])
}
